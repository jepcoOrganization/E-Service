<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add all Branch fields in database" xml:space="preserve">
    <value>Add all Branch fields in database</value>
  </data>
  <data name="All Meters Companies Users Info" xml:space="preserve">
    <value>All Meter Companies Users Informations has been retrieved successfully</value>
  </data>
  <data name="Data object sent from client is null" xml:space="preserve">
    <value>Data object sent from client is null</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Error In Integration With MenaTrack System" xml:space="preserve">
    <value>Error in  Integration with Mena Track System , please Try Later</value>
  </data>
  <data name="Error In Integration With MenaTrack System to close Tieckt" xml:space="preserve">
    <value>Error In Integration With MenaTrack System to close Tieckt</value>
  </data>
  <data name="Error In Integration With MenaTrack System to Reassign Tieckt" xml:space="preserve">
    <value>Error In Integration With MenaTrack System to Reassign Tieckt</value>
  </data>
  <data name="Incorrect Employee Number" xml:space="preserve">
    <value>Incorrect Employee Number</value>
  </data>
  <data name="Internal Error" xml:space="preserve">
    <value>Internal Error</value>
  </data>
  <data name="Internal server error" xml:space="preserve">
    <value>Internal server error</value>
  </data>
  <data name="Invalid Data object sent from client" xml:space="preserve">
    <value>Invalid Data object sent from client</value>
  </data>
  <data name="Invalid meterCompaniesRegistrationCommon object sent from client" xml:space="preserve">
    <value>Invalid meterCompaniesRegistrationCommon object sent from client</value>
  </data>
  <data name="Invalid Token" xml:space="preserve">
    <value>Invalid Token</value>
  </data>
  <data name="MenaTrackError" xml:space="preserve">
    <value>MenaTrackError</value>
  </data>
  <data name="Meter reading Comany User Data has been Updated" xml:space="preserve">
    <value>Meter reading Comany User Data has been Updated successfully</value>
  </data>
  <data name="meterCompaniesRegistrationCommon object sent from client is null" xml:space="preserve">
    <value>meterCompaniesRegistrationCommon object sent from client is null</value>
  </data>
  <data name="New Meter reading Comany User has been Added" xml:space="preserve">
    <value>New Meter reading Comany User has been Added To Database successfully</value>
  </data>
  <data name="No Data" xml:space="preserve">
    <value>No Data</value>
  </data>
  <data name="No Data Found" xml:space="preserve">
    <value>No records found for the search criteria entered</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>NotFound</value>
  </data>
  <data name="Parsing Error" xml:space="preserve">
    <value>Parsing Error</value>
  </data>
  <data name="Password Changed successfully" xml:space="preserve">
    <value>Password Changed successfully</value>
  </data>
  <data name="Required parameters missing to access data" xml:space="preserve">
    <value>Required parameters missing to access data</value>
  </data>
  <data name="Requsted User is Inactive , please conatct Adminstrator" xml:space="preserve">
    <value>Requsted User is Inactive , please conatct Adminstrator</value>
  </data>
  <data name="Returned all data from database" xml:space="preserve">
    <value>Returned all data from database</value>
  </data>
  <data name="Returned Branch with id" xml:space="preserve">
    <value>Returned Branch with id</value>
  </data>
  <data name="SMS Code didn't send" xml:space="preserve">
    <value>SMS Code didn't send</value>
  </data>
  <data name="SMS Code is incorrect" xml:space="preserve">
    <value>SMS Code is incorrect</value>
  </data>
  <data name="Someting Wrong in  LogOut" xml:space="preserve">
    <value>Someting Wrong in  LogOut</value>
  </data>
  <data name="successfully send sms code" xml:space="preserve">
    <value>successfully send sms code</value>
  </data>
  <data name="The Mobile Number is incorrect" xml:space="preserve">
    <value>The Mobile Number is incorrect</value>
  </data>
  <data name="The user name or password is incorrect" xml:space="preserve">
    <value>The user name or password is incorrect</value>
  </data>
  <data name="This User not Active" xml:space="preserve">
    <value>This User not Active</value>
  </data>
  <data name="Unsuccessfully send sms code" xml:space="preserve">
    <value>Unsuccessfully send sms code</value>
  </data>
  <data name="Update all User data in database" xml:space="preserve">
    <value>Update all User data in database</value>
  </data>
  <data name="User Added" xml:space="preserve">
    <value>User Added</value>
  </data>
  <data name="User Deleted" xml:space="preserve">
    <value>User Deleted</value>
  </data>
  <data name="User has been Deleted" xml:space="preserve">
    <value>User has been Deleted successfully</value>
  </data>
  <data name="User object sent from client is null" xml:space="preserve">
    <value>User object sent from client is null</value>
  </data>
  <data name="User with id hasn't been found in db" xml:space="preserve">
    <value>User hasn't been found in db</value>
  </data>
  <data name="User with Username hasn't been found in db" xml:space="preserve">
    <value>User with Username hasn't been found in db</value>
  </data>
  <data name="You are successfully logged in" xml:space="preserve">
    <value>You are successfully logged in</value>
  </data>
  <data name="You are successfully logged Out" xml:space="preserve">
    <value>You are successfully logged Out</value>
  </data>
  <data name="You can send sms code message after 24 hourse" xml:space="preserve">
    <value>You can send sms code message after 24 hourse</value>
  </data>
  <data name="You must Close or ReAssinged all Compliants before you logout" xml:space="preserve">
    <value>You must Close or ReAssinged all Compliants before you logout</value>
  </data>
</root>